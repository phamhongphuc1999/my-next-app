import edwardImg from 'public/images/elliptic-curve/edwards-curve.png';
import { AppArticle, ArticleLI, ArticleUL } from 'src/components/box/ArticleBox';
import EquationBox from 'src/components/Thesis/EquationBox';
import FigureBox from 'src/components/Thesis/FigureBox';
import RefLink from 'src/components/Thesis/RefLink';
import SectionBox from 'src/components/Thesis/SectionBox';

export default function Eddsa() {
  return (
    <SectionBox title="Edwards-curve Digital Signature Algorithm" id="eddsa">
      <FigureBox id="eddsa" src={edwardImg} alt="eddsa" title="Edwards curve shape" />
      <AppArticle isFirst>
        The Edwards-curve Digital Signature Algorithm (EdDSA)
        <RefLink toId="eddsa" mode="cite" /> (<RefLink toId="eddsa" />) is a variant of the Schnorr
        signature scheme that utilizes elliptic curves in Edwards form. EdDSA has several
        advantages, including faster computations, better resistance to side-channel attacks, and
        smaller signature sizes. Elliptic curves in Edwards form are defined by the equation:
      </AppArticle>
      <EquationBox id="eddsa-shape">
        {'$E_d: x^2 + y^2 = 1 + dx^2y^2, \\text{where d} \\in \\mathbb{K} \\setminus (0, 1)$'}
      </EquationBox>
      <AppArticle isMath>
        {'For two points $(x_1, y_1), (x_2, y_2)$, on the curve, their sum is given by:'}
      </AppArticle>
      <EquationBox id="eddsa-shape1">
        {
          '$(x_1, y_1) + (x_2, y_2) = (\\frac{x_1y_2 + y_1x_2}{1 + dx_1y_1x_2y_2}, \\frac{y_2y_1 - x_2x_1}{1 - dx_1y_1x_2y_2})$'
        }
      </EquationBox>
      <AppArticle>
        According to this equation, the neutral element is (0, 1), and the negative of a point (x,
        y) is (-x, y).
      </AppArticle>
      <AppArticle isMath>
        {
          'Furthermore, if d is not a square in $\\mathbb{K}$, then the sum of any two points is always well-defined. A generalized form, known as the twisted Edwards curve, is given by:'
        }
      </AppArticle>
      <EquationBox id="eddsa-shape2">
        {
          '$E_{a,d}: ax^2 + y^2 = 1 + dx^2y^2$, $\\text{where a, d} \\in \\mathbb{K} \\text{\\space are not zero and distinct}.$'
        }
      </EquationBox>
      <AppArticle isMath>
        {
          'The addition law still follows the above equation and has the same neutral element and negation rule.'
        }
      </AppArticle>
      <AppArticle>
        The Edwards-curve Digital Signature Algorithm (EdDSA) is a Schnorr signature scheme using
        Edwards curves. Implementations such as Ed25519, Ed448, and BabyJubJub provide efficient and
        secure digital signatures with compact key sizes.
      </AppArticle>
      <AppArticle isMath>
        {
          'EdDSA uses small $\\textsf{sk}$ and $\\textsf{pk}$ (Ed25519 and Ed448 are 32 and 57 bytes, respectively) and small signatures (Ed25519 and Ed448 are 64 and 114 bytes, respectively). The EdDSA key pair containing $\\textsf{sk}$ is generated by a random integer and the $\\textsf{pk} = \\textsf{sk} * G$.'
        }
      </AppArticle>
      <ArticleUL className="list-disc">
        <ArticleLI>
          <p className="font-[500]">Key generation</p>
          <ArticleUL className="list-decimal">
            <ArticleLI isMath className="ml-[2rem]">
              Select a random integer $d \in [1, n-1]$, $n$ is the order of elliptic curve.
            </ArticleLI>
            <ArticleLI isMath className="ml-[2rem]">
              Compute $Q = dG$
            </ArticleLI>
            <ArticleLI isMath className="ml-[2rem]">
              Public key is $Q$ and private key is $d$.
            </ArticleLI>
          </ArticleUL>
        </ArticleLI>
        <ArticleLI isMath>
          <p>
            <span className="font-[500]">Signature generation</span> with message $m$
          </p>
          <ArticleUL className="list-decimal">
            <ArticleLI isMath>
              {
                'Calculate $h = \\textit{hashFunction}(d)$ and split $h$ into two values $h_l$ and $h_r$.'
              }
            </ArticleLI>
            <ArticleLI isMath>
              {
                'Calculate $r = \\textit{hash}(h_r || m)$, $h_r || m$ is the concatenation between $h_r$ and $m$.'
              }
            </ArticleLI>
            <ArticleLI isMath>
              {'Calculate $R = rG$, denote $R_x$ is x-coordinate of $R$.'}
            </ArticleLI>
            <ArticleLI isMath>{'Calculate $k = \\textit{Hash}(R_x || Q || m)$.'}</ArticleLI>
            <ArticleLI isMath>{'Calculate $s = r + kd$ mod $n$.'}</ArticleLI>
            <ArticleLI isMath>{'Signature for message $m$ is $(R, s)$.'}</ArticleLI>
          </ArticleUL>
        </ArticleLI>
        <ArticleLI isMath>
          <p>
            <span className="font-[500]">Signature verification</span> with signature $(R, s)$
          </p>
          <ArticleUL className="list-decimal">
            <ArticleLI isMath>{'Calculate $k = \\textit{hash}(R_x || Q || m)$.'}</ArticleLI>
            <ArticleLI isMath>{'Calculate $c_1 = sG$.'}</ArticleLI>
            <ArticleLI isMath>{'Calculate $c_2 = R + kQ$'}</ArticleLI>
            <ArticleLI isMath>
              {'If $c_1 = c_2$, the signature is valid; otherwise, it is invalid.'}
            </ArticleLI>
          </ArticleUL>
        </ArticleLI>
      </ArticleUL>
    </SectionBox>
  );
}
